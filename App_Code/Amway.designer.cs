#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Amway")]
public partial class AmwayDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 擴充性方法定義
  partial void OnCreated();
  partial void InsertAddress(Address instance);
  partial void UpdateAddress(Address instance);
  partial void DeleteAddress(Address instance);
  partial void InsertSystemUser_Role(SystemUser_Role instance);
  partial void UpdateSystemUser_Role(SystemUser_Role instance);
  partial void DeleteSystemUser_Role(SystemUser_Role instance);
  partial void InsertBackendMenu(BackendMenu instance);
  partial void UpdateBackendMenu(BackendMenu instance);
  partial void DeleteBackendMenu(BackendMenu instance);
  partial void InsertBackendMenuPrivilege(BackendMenuPrivilege instance);
  partial void UpdateBackendMenuPrivilege(BackendMenuPrivilege instance);
  partial void DeleteBackendMenuPrivilege(BackendMenuPrivilege instance);
  partial void InsertCustomer(Customer instance);
  partial void UpdateCustomer(Customer instance);
  partial void DeleteCustomer(Customer instance);
  partial void InsertInvoice_Item(Invoice_Item instance);
  partial void UpdateInvoice_Item(Invoice_Item instance);
  partial void DeleteInvoice_Item(Invoice_Item instance);
  partial void InsertRole(Role instance);
  partial void UpdateRole(Role instance);
  partial void DeleteRole(Role instance);
  partial void InsertRole_BackendMenu(Role_BackendMenu instance);
  partial void UpdateRole_BackendMenu(Role_BackendMenu instance);
  partial void DeleteRole_BackendMenu(Role_BackendMenu instance);
  partial void InsertRole_BackendPrivilege(Role_BackendPrivilege instance);
  partial void UpdateRole_BackendPrivilege(Role_BackendPrivilege instance);
  partial void DeleteRole_BackendPrivilege(Role_BackendPrivilege instance);
  partial void InsertSystemLog(SystemLog instance);
  partial void UpdateSystemLog(SystemLog instance);
  partial void DeleteSystemLog(SystemLog instance);
  partial void InsertSystemPosition(SystemPosition instance);
  partial void UpdateSystemPosition(SystemPosition instance);
  partial void DeleteSystemPosition(SystemPosition instance);
  partial void InsertSystemUser(SystemUser instance);
  partial void UpdateSystemUser(SystemUser instance);
  partial void DeleteSystemUser(SystemUser instance);
  partial void InsertInvoice(Invoice instance);
  partial void UpdateInvoice(Invoice instance);
  partial void DeleteInvoice(Invoice instance);
  #endregion
	
	public AmwayDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["AmwayConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public AmwayDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public AmwayDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public AmwayDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public AmwayDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Address> Address
	{
		get
		{
			return this.GetTable<Address>();
		}
	}
	
	public System.Data.Linq.Table<SystemUser_Role> SystemUser_Role
	{
		get
		{
			return this.GetTable<SystemUser_Role>();
		}
	}
	
	public System.Data.Linq.Table<BackendMenu> BackendMenu
	{
		get
		{
			return this.GetTable<BackendMenu>();
		}
	}
	
	public System.Data.Linq.Table<BackendMenuPrivilege> BackendMenuPrivilege
	{
		get
		{
			return this.GetTable<BackendMenuPrivilege>();
		}
	}
	
	public System.Data.Linq.Table<Customer> Customer
	{
		get
		{
			return this.GetTable<Customer>();
		}
	}
	
	public System.Data.Linq.Table<Invoice_Item> Invoice_Item
	{
		get
		{
			return this.GetTable<Invoice_Item>();
		}
	}
	
	public System.Data.Linq.Table<Role> Role
	{
		get
		{
			return this.GetTable<Role>();
		}
	}
	
	public System.Data.Linq.Table<Role_BackendMenu> Role_BackendMenu
	{
		get
		{
			return this.GetTable<Role_BackendMenu>();
		}
	}
	
	public System.Data.Linq.Table<Role_BackendPrivilege> Role_BackendPrivilege
	{
		get
		{
			return this.GetTable<Role_BackendPrivilege>();
		}
	}
	
	public System.Data.Linq.Table<SystemLog> SystemLog
	{
		get
		{
			return this.GetTable<SystemLog>();
		}
	}
	
	public System.Data.Linq.Table<SystemPosition> SystemPosition
	{
		get
		{
			return this.GetTable<SystemPosition>();
		}
	}
	
	public System.Data.Linq.Table<SystemUser> SystemUser
	{
		get
		{
			return this.GetTable<SystemUser>();
		}
	}
	
	public System.Data.Linq.Table<Invoice> Invoice
	{
		get
		{
			return this.GetTable<Invoice>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Address")]
public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private System.Nullable<int> _Parent;
	
	private string _ZipNum;
	
	private bool _Del;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentChanging(System.Nullable<int> value);
    partial void OnParentChanged();
    partial void OnZipNumChanging(string value);
    partial void OnZipNumChanged();
    partial void OnDelChanging(bool value);
    partial void OnDelChanged();
    #endregion
	
	public Address()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="Int")]
	public System.Nullable<int> Parent
	{
		get
		{
			return this._Parent;
		}
		set
		{
			if ((this._Parent != value))
			{
				this.OnParentChanging(value);
				this.SendPropertyChanging();
				this._Parent = value;
				this.SendPropertyChanged("Parent");
				this.OnParentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipNum", DbType="NVarChar(10)")]
	public string ZipNum
	{
		get
		{
			return this._ZipNum;
		}
		set
		{
			if ((this._ZipNum != value))
			{
				this.OnZipNumChanging(value);
				this.SendPropertyChanging();
				this._ZipNum = value;
				this.SendPropertyChanged("ZipNum");
				this.OnZipNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Del", DbType="Bit NOT NULL")]
	public bool Del
	{
		get
		{
			return this._Del;
		}
		set
		{
			if ((this._Del != value))
			{
				this.OnDelChanging(value);
				this.SendPropertyChanging();
				this._Del = value;
				this.SendPropertyChanged("Del");
				this.OnDelChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemUser_Role")]
public partial class SystemUser_Role : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _RoleID;
	
	private int _SystemUserID;
	
	private bool _Del;
	
	private EntityRef<Role> _Role;
	
	private EntityRef<SystemUser> _SystemUser;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnSystemUserIDChanging(int value);
    partial void OnSystemUserIDChanged();
    partial void OnDelChanging(bool value);
    partial void OnDelChanged();
    #endregion
	
	public SystemUser_Role()
	{
		this._Role = default(EntityRef<Role>);
		this._SystemUser = default(EntityRef<SystemUser>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
	public int RoleID
	{
		get
		{
			return this._RoleID;
		}
		set
		{
			if ((this._RoleID != value))
			{
				if (this._Role.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoleIDChanging(value);
				this.SendPropertyChanging();
				this._RoleID = value;
				this.SendPropertyChanged("RoleID");
				this.OnRoleIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemUserID", DbType="Int NOT NULL")]
	public int SystemUserID
	{
		get
		{
			return this._SystemUserID;
		}
		set
		{
			if ((this._SystemUserID != value))
			{
				if (this._SystemUser.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnSystemUserIDChanging(value);
				this.SendPropertyChanging();
				this._SystemUserID = value;
				this.SendPropertyChanged("SystemUserID");
				this.OnSystemUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Del", DbType="Bit NOT NULL")]
	public bool Del
	{
		get
		{
			return this._Del;
		}
		set
		{
			if ((this._Del != value))
			{
				this.OnDelChanging(value);
				this.SendPropertyChanging();
				this._Del = value;
				this.SendPropertyChanged("Del");
				this.OnDelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_SystemUser_Role", Storage="_Role", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
	public Role Role
	{
		get
		{
			return this._Role.Entity;
		}
		set
		{
			Role previousValue = this._Role.Entity;
			if (((previousValue != value) 
						|| (this._Role.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Role.Entity = null;
					previousValue.SystemUser_Role.Remove(this);
				}
				this._Role.Entity = value;
				if ((value != null))
				{
					value.SystemUser_Role.Add(this);
					this._RoleID = value.ID;
				}
				else
				{
					this._RoleID = default(int);
				}
				this.SendPropertyChanged("Role");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_SystemUser_Role", Storage="_SystemUser", ThisKey="SystemUserID", OtherKey="ID", IsForeignKey=true)]
	public SystemUser SystemUser
	{
		get
		{
			return this._SystemUser.Entity;
		}
		set
		{
			SystemUser previousValue = this._SystemUser.Entity;
			if (((previousValue != value) 
						|| (this._SystemUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SystemUser.Entity = null;
					previousValue.SystemUser_Role.Remove(this);
				}
				this._SystemUser.Entity = value;
				if ((value != null))
				{
					value.SystemUser_Role.Add(this);
					this._SystemUserID = value.ID;
				}
				else
				{
					this._SystemUserID = default(int);
				}
				this.SendPropertyChanged("SystemUser");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BackendMenu")]
public partial class BackendMenu : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Nullable<int> _ParentID;
	
	private string _Icon;
	
	private string _Name;
	
	private string _URL;
	
	private System.Nullable<int> _Sort;
	
	private System.Nullable<bool> _Enable;
	
	private System.Nullable<bool> _Del;
	
	private EntitySet<BackendMenuPrivilege> _BackendMenuPrivilege;
	
	private EntitySet<Role_BackendMenu> _Role_BackendMenu;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnSortChanging(System.Nullable<int> value);
    partial void OnSortChanged();
    partial void OnEnableChanging(System.Nullable<bool> value);
    partial void OnEnableChanged();
    partial void OnDelChanging(System.Nullable<bool> value);
    partial void OnDelChanged();
    #endregion
	
	public BackendMenu()
	{
		this._BackendMenuPrivilege = new EntitySet<BackendMenuPrivilege>(new Action<BackendMenuPrivilege>(this.attach_BackendMenuPrivilege), new Action<BackendMenuPrivilege>(this.detach_BackendMenuPrivilege));
		this._Role_BackendMenu = new EntitySet<Role_BackendMenu>(new Action<Role_BackendMenu>(this.attach_Role_BackendMenu), new Action<Role_BackendMenu>(this.detach_Role_BackendMenu));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
	public System.Nullable<int> ParentID
	{
		get
		{
			return this._ParentID;
		}
		set
		{
			if ((this._ParentID != value))
			{
				this.OnParentIDChanging(value);
				this.SendPropertyChanging();
				this._ParentID = value;
				this.SendPropertyChanged("ParentID");
				this.OnParentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="NVarChar(50)")]
	public string Icon
	{
		get
		{
			return this._Icon;
		}
		set
		{
			if ((this._Icon != value))
			{
				this.OnIconChanging(value);
				this.SendPropertyChanging();
				this._Icon = value;
				this.SendPropertyChanged("Icon");
				this.OnIconChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(MAX)")]
	public string URL
	{
		get
		{
			return this._URL;
		}
		set
		{
			if ((this._URL != value))
			{
				this.OnURLChanging(value);
				this.SendPropertyChanging();
				this._URL = value;
				this.SendPropertyChanged("URL");
				this.OnURLChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
	public System.Nullable<int> Sort
	{
		get
		{
			return this._Sort;
		}
		set
		{
			if ((this._Sort != value))
			{
				this.OnSortChanging(value);
				this.SendPropertyChanging();
				this._Sort = value;
				this.SendPropertyChanged("Sort");
				this.OnSortChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enable", DbType="Bit")]
	public System.Nullable<bool> Enable
	{
		get
		{
			return this._Enable;
		}
		set
		{
			if ((this._Enable != value))
			{
				this.OnEnableChanging(value);
				this.SendPropertyChanging();
				this._Enable = value;
				this.SendPropertyChanged("Enable");
				this.OnEnableChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Del", DbType="Bit")]
	public System.Nullable<bool> Del
	{
		get
		{
			return this._Del;
		}
		set
		{
			if ((this._Del != value))
			{
				this.OnDelChanging(value);
				this.SendPropertyChanging();
				this._Del = value;
				this.SendPropertyChanged("Del");
				this.OnDelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BackendMenu_BackendMenuPrivilege", Storage="_BackendMenuPrivilege", ThisKey="ID", OtherKey="BackendMenuID")]
	public EntitySet<BackendMenuPrivilege> BackendMenuPrivilege
	{
		get
		{
			return this._BackendMenuPrivilege;
		}
		set
		{
			this._BackendMenuPrivilege.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BackendMenu_Role_BackendMenu", Storage="_Role_BackendMenu", ThisKey="ID", OtherKey="BackendMenuID")]
	public EntitySet<Role_BackendMenu> Role_BackendMenu
	{
		get
		{
			return this._Role_BackendMenu;
		}
		set
		{
			this._Role_BackendMenu.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_BackendMenuPrivilege(BackendMenuPrivilege entity)
	{
		this.SendPropertyChanging();
		entity.BackendMenu = this;
	}
	
	private void detach_BackendMenuPrivilege(BackendMenuPrivilege entity)
	{
		this.SendPropertyChanging();
		entity.BackendMenu = null;
	}
	
	private void attach_Role_BackendMenu(Role_BackendMenu entity)
	{
		this.SendPropertyChanging();
		entity.BackendMenu = this;
	}
	
	private void detach_Role_BackendMenu(Role_BackendMenu entity)
	{
		this.SendPropertyChanging();
		entity.BackendMenu = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BackendMenuPrivilege")]
public partial class BackendMenuPrivilege : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Nullable<int> _BackendMenuID;
	
	private string _Name;
	
	private System.Nullable<int> _Sort;
	
	private System.Nullable<int> _Flag;
	
	private bool _Del;
	
	private EntitySet<Role_BackendPrivilege> _Role_BackendPrivilege;
	
	private EntityRef<BackendMenu> _BackendMenu;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBackendMenuIDChanging(System.Nullable<int> value);
    partial void OnBackendMenuIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortChanging(System.Nullable<int> value);
    partial void OnSortChanged();
    partial void OnFlagChanging(System.Nullable<int> value);
    partial void OnFlagChanged();
    partial void OnDelChanging(bool value);
    partial void OnDelChanged();
    #endregion
	
	public BackendMenuPrivilege()
	{
		this._Role_BackendPrivilege = new EntitySet<Role_BackendPrivilege>(new Action<Role_BackendPrivilege>(this.attach_Role_BackendPrivilege), new Action<Role_BackendPrivilege>(this.detach_Role_BackendPrivilege));
		this._BackendMenu = default(EntityRef<BackendMenu>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackendMenuID", DbType="Int")]
	public System.Nullable<int> BackendMenuID
	{
		get
		{
			return this._BackendMenuID;
		}
		set
		{
			if ((this._BackendMenuID != value))
			{
				if (this._BackendMenu.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBackendMenuIDChanging(value);
				this.SendPropertyChanging();
				this._BackendMenuID = value;
				this.SendPropertyChanged("BackendMenuID");
				this.OnBackendMenuIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(10)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int")]
	public System.Nullable<int> Sort
	{
		get
		{
			return this._Sort;
		}
		set
		{
			if ((this._Sort != value))
			{
				this.OnSortChanging(value);
				this.SendPropertyChanging();
				this._Sort = value;
				this.SendPropertyChanged("Sort");
				this.OnSortChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flag", DbType="Int")]
	public System.Nullable<int> Flag
	{
		get
		{
			return this._Flag;
		}
		set
		{
			if ((this._Flag != value))
			{
				this.OnFlagChanging(value);
				this.SendPropertyChanging();
				this._Flag = value;
				this.SendPropertyChanged("Flag");
				this.OnFlagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Del", DbType="Bit NOT NULL")]
	public bool Del
	{
		get
		{
			return this._Del;
		}
		set
		{
			if ((this._Del != value))
			{
				this.OnDelChanging(value);
				this.SendPropertyChanging();
				this._Del = value;
				this.SendPropertyChanged("Del");
				this.OnDelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BackendMenuPrivilege_Role_BackendPrivilege", Storage="_Role_BackendPrivilege", ThisKey="ID", OtherKey="BackendMenuPrvilegeID")]
	public EntitySet<Role_BackendPrivilege> Role_BackendPrivilege
	{
		get
		{
			return this._Role_BackendPrivilege;
		}
		set
		{
			this._Role_BackendPrivilege.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BackendMenu_BackendMenuPrivilege", Storage="_BackendMenu", ThisKey="BackendMenuID", OtherKey="ID", IsForeignKey=true)]
	public BackendMenu BackendMenu
	{
		get
		{
			return this._BackendMenu.Entity;
		}
		set
		{
			BackendMenu previousValue = this._BackendMenu.Entity;
			if (((previousValue != value) 
						|| (this._BackendMenu.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._BackendMenu.Entity = null;
					previousValue.BackendMenuPrivilege.Remove(this);
				}
				this._BackendMenu.Entity = value;
				if ((value != null))
				{
					value.BackendMenuPrivilege.Add(this);
					this._BackendMenuID = value.ID;
				}
				else
				{
					this._BackendMenuID = default(Nullable<int>);
				}
				this.SendPropertyChanged("BackendMenu");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Role_BackendPrivilege(Role_BackendPrivilege entity)
	{
		this.SendPropertyChanging();
		entity.BackendMenuPrivilege = this;
	}
	
	private void detach_Role_BackendPrivilege(Role_BackendPrivilege entity)
	{
		this.SendPropertyChanging();
		entity.BackendMenuPrivilege = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Nullable<int> _Num;
	
	private System.Nullable<int> _UserID;
	
	private string _Source;
	
	private string _Type;
	
	private string _No;
	
	private string _Gender;
	
	private string _Name;
	
	private string _Email;
	
	private string _Tel;
	
	private string _Tel2;
	
	private string _Zip;
	
	private string _Add1;
	
	private string _Add2;
	
	private string _Add3;
	
	private string _Add4;
	
	private string _Remark;
	
	private System.Nullable<System.DateTime> _CDate;
	
	private System.Nullable<System.DateTime> _UDate;
	
	private System.Nullable<System.DateTime> _SDate;
	
	private bool _Del;
	
	private EntitySet<Invoice> _Invoice;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNumChanging(System.Nullable<int> value);
    partial void OnNumChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnNoChanging(string value);
    partial void OnNoChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnTel2Changing(string value);
    partial void OnTel2Changed();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnAdd1Changing(string value);
    partial void OnAdd1Changed();
    partial void OnAdd2Changing(string value);
    partial void OnAdd2Changed();
    partial void OnAdd3Changing(string value);
    partial void OnAdd3Changed();
    partial void OnAdd4Changing(string value);
    partial void OnAdd4Changed();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCDateChanged();
    partial void OnUDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUDateChanged();
    partial void OnSDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSDateChanged();
    partial void OnDelChanging(bool value);
    partial void OnDelChanged();
    #endregion
	
	public Customer()
	{
		this._Invoice = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoice), new Action<Invoice>(this.detach_Invoice));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num", DbType="Int")]
	public System.Nullable<int> Num
	{
		get
		{
			return this._Num;
		}
		set
		{
			if ((this._Num != value))
			{
				this.OnNumChanging(value);
				this.SendPropertyChanging();
				this._Num = value;
				this.SendPropertyChanged("Num");
				this.OnNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
	public System.Nullable<int> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(10)")]
	public string Source
	{
		get
		{
			return this._Source;
		}
		set
		{
			if ((this._Source != value))
			{
				this.OnSourceChanging(value);
				this.SendPropertyChanging();
				this._Source = value;
				this.SendPropertyChanged("Source");
				this.OnSourceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(20)")]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="NVarChar(20)")]
	public string No
	{
		get
		{
			return this._No;
		}
		set
		{
			if ((this._No != value))
			{
				this.OnNoChanging(value);
				this.SendPropertyChanging();
				this._No = value;
				this.SendPropertyChanged("No");
				this.OnNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(10)")]
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this.OnGenderChanging(value);
				this.SendPropertyChanging();
				this._Gender = value;
				this.SendPropertyChanged("Gender");
				this.OnGenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(10)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(20)")]
	public string Tel
	{
		get
		{
			return this._Tel;
		}
		set
		{
			if ((this._Tel != value))
			{
				this.OnTelChanging(value);
				this.SendPropertyChanging();
				this._Tel = value;
				this.SendPropertyChanged("Tel");
				this.OnTelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel2", DbType="NVarChar(20)")]
	public string Tel2
	{
		get
		{
			return this._Tel2;
		}
		set
		{
			if ((this._Tel2 != value))
			{
				this.OnTel2Changing(value);
				this.SendPropertyChanging();
				this._Tel2 = value;
				this.SendPropertyChanged("Tel2");
				this.OnTel2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(20)")]
	public string Zip
	{
		get
		{
			return this._Zip;
		}
		set
		{
			if ((this._Zip != value))
			{
				this.OnZipChanging(value);
				this.SendPropertyChanging();
				this._Zip = value;
				this.SendPropertyChanged("Zip");
				this.OnZipChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Add1", DbType="NVarChar(20)")]
	public string Add1
	{
		get
		{
			return this._Add1;
		}
		set
		{
			if ((this._Add1 != value))
			{
				this.OnAdd1Changing(value);
				this.SendPropertyChanging();
				this._Add1 = value;
				this.SendPropertyChanged("Add1");
				this.OnAdd1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Add2", DbType="NVarChar(20)")]
	public string Add2
	{
		get
		{
			return this._Add2;
		}
		set
		{
			if ((this._Add2 != value))
			{
				this.OnAdd2Changing(value);
				this.SendPropertyChanging();
				this._Add2 = value;
				this.SendPropertyChanged("Add2");
				this.OnAdd2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Add3", DbType="NVarChar(20)")]
	public string Add3
	{
		get
		{
			return this._Add3;
		}
		set
		{
			if ((this._Add3 != value))
			{
				this.OnAdd3Changing(value);
				this.SendPropertyChanging();
				this._Add3 = value;
				this.SendPropertyChanged("Add3");
				this.OnAdd3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Add4", DbType="NVarChar(MAX)")]
	public string Add4
	{
		get
		{
			return this._Add4;
		}
		set
		{
			if ((this._Add4 != value))
			{
				this.OnAdd4Changing(value);
				this.SendPropertyChanging();
				this._Add4 = value;
				this.SendPropertyChanged("Add4");
				this.OnAdd4Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(MAX)")]
	public string Remark
	{
		get
		{
			return this._Remark;
		}
		set
		{
			if ((this._Remark != value))
			{
				this.OnRemarkChanging(value);
				this.SendPropertyChanging();
				this._Remark = value;
				this.SendPropertyChanged("Remark");
				this.OnRemarkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CDate
	{
		get
		{
			return this._CDate;
		}
		set
		{
			if ((this._CDate != value))
			{
				this.OnCDateChanging(value);
				this.SendPropertyChanging();
				this._CDate = value;
				this.SendPropertyChanged("CDate");
				this.OnCDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> UDate
	{
		get
		{
			return this._UDate;
		}
		set
		{
			if ((this._UDate != value))
			{
				this.OnUDateChanging(value);
				this.SendPropertyChanging();
				this._UDate = value;
				this.SendPropertyChanged("UDate");
				this.OnUDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDate", DbType="Date")]
	public System.Nullable<System.DateTime> SDate
	{
		get
		{
			return this._SDate;
		}
		set
		{
			if ((this._SDate != value))
			{
				this.OnSDateChanging(value);
				this.SendPropertyChanging();
				this._SDate = value;
				this.SendPropertyChanged("SDate");
				this.OnSDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Del", DbType="Bit NOT NULL")]
	public bool Del
	{
		get
		{
			return this._Del;
		}
		set
		{
			if ((this._Del != value))
			{
				this.OnDelChanging(value);
				this.SendPropertyChanging();
				this._Del = value;
				this.SendPropertyChanged("Del");
				this.OnDelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Invoice", Storage="_Invoice", ThisKey="ID", OtherKey="CustomerID")]
	public EntitySet<Invoice> Invoice
	{
		get
		{
			return this._Invoice;
		}
		set
		{
			this._Invoice.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Invoice(Invoice entity)
	{
		this.SendPropertyChanging();
		entity.Customer = this;
	}
	
	private void detach_Invoice(Invoice entity)
	{
		this.SendPropertyChanging();
		entity.Customer = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice_Item")]
public partial class Invoice_Item : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Nullable<int> _InvoiceID;
	
	private string _Name;
	
	private System.Nullable<int> _Quantity;
	
	private System.Nullable<int> _UnitCost;
	
	private bool _Del;
	
	private EntityRef<Invoice> _Invoice;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInvoiceIDChanging(System.Nullable<int> value);
    partial void OnInvoiceIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnUnitCostChanging(System.Nullable<int> value);
    partial void OnUnitCostChanged();
    partial void OnDelChanging(bool value);
    partial void OnDelChanged();
    #endregion
	
	public Invoice_Item()
	{
		this._Invoice = default(EntityRef<Invoice>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int")]
	public System.Nullable<int> InvoiceID
	{
		get
		{
			return this._InvoiceID;
		}
		set
		{
			if ((this._InvoiceID != value))
			{
				if (this._Invoice.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnInvoiceIDChanging(value);
				this.SendPropertyChanging();
				this._InvoiceID = value;
				this.SendPropertyChanged("InvoiceID");
				this.OnInvoiceIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
	public System.Nullable<int> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCost", DbType="Int")]
	public System.Nullable<int> UnitCost
	{
		get
		{
			return this._UnitCost;
		}
		set
		{
			if ((this._UnitCost != value))
			{
				this.OnUnitCostChanging(value);
				this.SendPropertyChanging();
				this._UnitCost = value;
				this.SendPropertyChanged("UnitCost");
				this.OnUnitCostChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Del", DbType="Bit NOT NULL")]
	public bool Del
	{
		get
		{
			return this._Del;
		}
		set
		{
			if ((this._Del != value))
			{
				this.OnDelChanging(value);
				this.SendPropertyChanging();
				this._Del = value;
				this.SendPropertyChanged("Del");
				this.OnDelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Invoice_Item", Storage="_Invoice", ThisKey="InvoiceID", OtherKey="ID", IsForeignKey=true)]
	public Invoice Invoice
	{
		get
		{
			return this._Invoice.Entity;
		}
		set
		{
			Invoice previousValue = this._Invoice.Entity;
			if (((previousValue != value) 
						|| (this._Invoice.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Invoice.Entity = null;
					previousValue.Invoice_Item.Remove(this);
				}
				this._Invoice.Entity = value;
				if ((value != null))
				{
					value.Invoice_Item.Add(this);
					this._InvoiceID = value.ID;
				}
				else
				{
					this._InvoiceID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Invoice");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private string _Description;
	
	private int _Sort;
	
	private System.DateTime _CreateTime;
	
	private System.DateTime _UpdateTime;
	
	private int _UpdateUserID;
	
	private bool _Enable;
	
	private bool _Del;
	
	private EntitySet<SystemUser_Role> _SystemUser_Role;
	
	private EntitySet<Role_BackendMenu> _Role_BackendMenu;
	
	private EntitySet<Role_BackendPrivilege> _Role_BackendPrivilege;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSortChanging(int value);
    partial void OnSortChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnUpdateTimeChanging(System.DateTime value);
    partial void OnUpdateTimeChanged();
    partial void OnUpdateUserIDChanging(int value);
    partial void OnUpdateUserIDChanged();
    partial void OnEnableChanging(bool value);
    partial void OnEnableChanged();
    partial void OnDelChanging(bool value);
    partial void OnDelChanged();
    #endregion
	
	public Role()
	{
		this._SystemUser_Role = new EntitySet<SystemUser_Role>(new Action<SystemUser_Role>(this.attach_SystemUser_Role), new Action<SystemUser_Role>(this.detach_SystemUser_Role));
		this._Role_BackendMenu = new EntitySet<Role_BackendMenu>(new Action<Role_BackendMenu>(this.attach_Role_BackendMenu), new Action<Role_BackendMenu>(this.detach_Role_BackendMenu));
		this._Role_BackendPrivilege = new EntitySet<Role_BackendPrivilege>(new Action<Role_BackendPrivilege>(this.attach_Role_BackendPrivilege), new Action<Role_BackendPrivilege>(this.detach_Role_BackendPrivilege));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sort", DbType="Int NOT NULL")]
	public int Sort
	{
		get
		{
			return this._Sort;
		}
		set
		{
			if ((this._Sort != value))
			{
				this.OnSortChanging(value);
				this.SendPropertyChanging();
				this._Sort = value;
				this.SendPropertyChanged("Sort");
				this.OnSortChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
	public System.DateTime CreateTime
	{
		get
		{
			return this._CreateTime;
		}
		set
		{
			if ((this._CreateTime != value))
			{
				this.OnCreateTimeChanging(value);
				this.SendPropertyChanging();
				this._CreateTime = value;
				this.SendPropertyChanged("CreateTime");
				this.OnCreateTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
	public System.DateTime UpdateTime
	{
		get
		{
			return this._UpdateTime;
		}
		set
		{
			if ((this._UpdateTime != value))
			{
				this.OnUpdateTimeChanging(value);
				this.SendPropertyChanging();
				this._UpdateTime = value;
				this.SendPropertyChanged("UpdateTime");
				this.OnUpdateTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserID", DbType="Int NOT NULL")]
	public int UpdateUserID
	{
		get
		{
			return this._UpdateUserID;
		}
		set
		{
			if ((this._UpdateUserID != value))
			{
				this.OnUpdateUserIDChanging(value);
				this.SendPropertyChanging();
				this._UpdateUserID = value;
				this.SendPropertyChanged("UpdateUserID");
				this.OnUpdateUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enable", DbType="Bit NOT NULL")]
	public bool Enable
	{
		get
		{
			return this._Enable;
		}
		set
		{
			if ((this._Enable != value))
			{
				this.OnEnableChanging(value);
				this.SendPropertyChanging();
				this._Enable = value;
				this.SendPropertyChanged("Enable");
				this.OnEnableChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Del", DbType="Bit NOT NULL")]
	public bool Del
	{
		get
		{
			return this._Del;
		}
		set
		{
			if ((this._Del != value))
			{
				this.OnDelChanging(value);
				this.SendPropertyChanging();
				this._Del = value;
				this.SendPropertyChanged("Del");
				this.OnDelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_SystemUser_Role", Storage="_SystemUser_Role", ThisKey="ID", OtherKey="RoleID")]
	public EntitySet<SystemUser_Role> SystemUser_Role
	{
		get
		{
			return this._SystemUser_Role;
		}
		set
		{
			this._SystemUser_Role.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Role_BackendMenu", Storage="_Role_BackendMenu", ThisKey="ID", OtherKey="RoleID")]
	public EntitySet<Role_BackendMenu> Role_BackendMenu
	{
		get
		{
			return this._Role_BackendMenu;
		}
		set
		{
			this._Role_BackendMenu.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Role_BackendPrivilege", Storage="_Role_BackendPrivilege", ThisKey="ID", OtherKey="RoleID")]
	public EntitySet<Role_BackendPrivilege> Role_BackendPrivilege
	{
		get
		{
			return this._Role_BackendPrivilege;
		}
		set
		{
			this._Role_BackendPrivilege.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SystemUser_Role(SystemUser_Role entity)
	{
		this.SendPropertyChanging();
		entity.Role = this;
	}
	
	private void detach_SystemUser_Role(SystemUser_Role entity)
	{
		this.SendPropertyChanging();
		entity.Role = null;
	}
	
	private void attach_Role_BackendMenu(Role_BackendMenu entity)
	{
		this.SendPropertyChanging();
		entity.Role = this;
	}
	
	private void detach_Role_BackendMenu(Role_BackendMenu entity)
	{
		this.SendPropertyChanging();
		entity.Role = null;
	}
	
	private void attach_Role_BackendPrivilege(Role_BackendPrivilege entity)
	{
		this.SendPropertyChanging();
		entity.Role = this;
	}
	
	private void detach_Role_BackendPrivilege(Role_BackendPrivilege entity)
	{
		this.SendPropertyChanging();
		entity.Role = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role_BackendMenu")]
public partial class Role_BackendMenu : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _RoleID;
	
	private int _BackendMenuID;
	
	private bool _Del;
	
	private EntityRef<BackendMenu> _BackendMenu;
	
	private EntityRef<Role> _Role;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnBackendMenuIDChanging(int value);
    partial void OnBackendMenuIDChanged();
    partial void OnDelChanging(bool value);
    partial void OnDelChanged();
    #endregion
	
	public Role_BackendMenu()
	{
		this._BackendMenu = default(EntityRef<BackendMenu>);
		this._Role = default(EntityRef<Role>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
	public int RoleID
	{
		get
		{
			return this._RoleID;
		}
		set
		{
			if ((this._RoleID != value))
			{
				if (this._Role.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoleIDChanging(value);
				this.SendPropertyChanging();
				this._RoleID = value;
				this.SendPropertyChanged("RoleID");
				this.OnRoleIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackendMenuID", DbType="Int NOT NULL")]
	public int BackendMenuID
	{
		get
		{
			return this._BackendMenuID;
		}
		set
		{
			if ((this._BackendMenuID != value))
			{
				if (this._BackendMenu.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBackendMenuIDChanging(value);
				this.SendPropertyChanging();
				this._BackendMenuID = value;
				this.SendPropertyChanged("BackendMenuID");
				this.OnBackendMenuIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Del", DbType="Bit NOT NULL")]
	public bool Del
	{
		get
		{
			return this._Del;
		}
		set
		{
			if ((this._Del != value))
			{
				this.OnDelChanging(value);
				this.SendPropertyChanging();
				this._Del = value;
				this.SendPropertyChanged("Del");
				this.OnDelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BackendMenu_Role_BackendMenu", Storage="_BackendMenu", ThisKey="BackendMenuID", OtherKey="ID", IsForeignKey=true)]
	public BackendMenu BackendMenu
	{
		get
		{
			return this._BackendMenu.Entity;
		}
		set
		{
			BackendMenu previousValue = this._BackendMenu.Entity;
			if (((previousValue != value) 
						|| (this._BackendMenu.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._BackendMenu.Entity = null;
					previousValue.Role_BackendMenu.Remove(this);
				}
				this._BackendMenu.Entity = value;
				if ((value != null))
				{
					value.Role_BackendMenu.Add(this);
					this._BackendMenuID = value.ID;
				}
				else
				{
					this._BackendMenuID = default(int);
				}
				this.SendPropertyChanged("BackendMenu");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Role_BackendMenu", Storage="_Role", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
	public Role Role
	{
		get
		{
			return this._Role.Entity;
		}
		set
		{
			Role previousValue = this._Role.Entity;
			if (((previousValue != value) 
						|| (this._Role.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Role.Entity = null;
					previousValue.Role_BackendMenu.Remove(this);
				}
				this._Role.Entity = value;
				if ((value != null))
				{
					value.Role_BackendMenu.Add(this);
					this._RoleID = value.ID;
				}
				else
				{
					this._RoleID = default(int);
				}
				this.SendPropertyChanged("Role");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role_BackendPrivilege")]
public partial class Role_BackendPrivilege : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _RoleID;
	
	private int _BackendMenuPrvilegeID;
	
	private EntityRef<BackendMenuPrivilege> _BackendMenuPrivilege;
	
	private EntityRef<Role> _Role;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    partial void OnBackendMenuPrvilegeIDChanging(int value);
    partial void OnBackendMenuPrvilegeIDChanged();
    #endregion
	
	public Role_BackendPrivilege()
	{
		this._BackendMenuPrivilege = default(EntityRef<BackendMenuPrivilege>);
		this._Role = default(EntityRef<Role>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
	public int RoleID
	{
		get
		{
			return this._RoleID;
		}
		set
		{
			if ((this._RoleID != value))
			{
				if (this._Role.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoleIDChanging(value);
				this.SendPropertyChanging();
				this._RoleID = value;
				this.SendPropertyChanged("RoleID");
				this.OnRoleIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackendMenuPrvilegeID", DbType="Int NOT NULL")]
	public int BackendMenuPrvilegeID
	{
		get
		{
			return this._BackendMenuPrvilegeID;
		}
		set
		{
			if ((this._BackendMenuPrvilegeID != value))
			{
				if (this._BackendMenuPrivilege.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBackendMenuPrvilegeIDChanging(value);
				this.SendPropertyChanging();
				this._BackendMenuPrvilegeID = value;
				this.SendPropertyChanged("BackendMenuPrvilegeID");
				this.OnBackendMenuPrvilegeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BackendMenuPrivilege_Role_BackendPrivilege", Storage="_BackendMenuPrivilege", ThisKey="BackendMenuPrvilegeID", OtherKey="ID", IsForeignKey=true)]
	public BackendMenuPrivilege BackendMenuPrivilege
	{
		get
		{
			return this._BackendMenuPrivilege.Entity;
		}
		set
		{
			BackendMenuPrivilege previousValue = this._BackendMenuPrivilege.Entity;
			if (((previousValue != value) 
						|| (this._BackendMenuPrivilege.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._BackendMenuPrivilege.Entity = null;
					previousValue.Role_BackendPrivilege.Remove(this);
				}
				this._BackendMenuPrivilege.Entity = value;
				if ((value != null))
				{
					value.Role_BackendPrivilege.Add(this);
					this._BackendMenuPrvilegeID = value.ID;
				}
				else
				{
					this._BackendMenuPrvilegeID = default(int);
				}
				this.SendPropertyChanged("BackendMenuPrivilege");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Role_BackendPrivilege", Storage="_Role", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
	public Role Role
	{
		get
		{
			return this._Role.Entity;
		}
		set
		{
			Role previousValue = this._Role.Entity;
			if (((previousValue != value) 
						|| (this._Role.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Role.Entity = null;
					previousValue.Role_BackendPrivilege.Remove(this);
				}
				this._Role.Entity = value;
				if ((value != null))
				{
					value.Role_BackendPrivilege.Add(this);
					this._RoleID = value.ID;
				}
				else
				{
					this._RoleID = default(int);
				}
				this.SendPropertyChanged("Role");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemLog")]
public partial class SystemLog : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Action;
	
	private string _PageName;
	
	private string _TableName;
	
	private string _Memo;
	
	private System.Nullable<int> _SystemUserID;
	
	private System.Nullable<System.DateTime> _CreateDate;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnMemoChanging(string value);
    partial void OnMemoChanged();
    partial void OnSystemUserIDChanging(System.Nullable<int> value);
    partial void OnSystemUserIDChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    #endregion
	
	public SystemLog()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(MAX)")]
	public string Action
	{
		get
		{
			return this._Action;
		}
		set
		{
			if ((this._Action != value))
			{
				this.OnActionChanging(value);
				this.SendPropertyChanging();
				this._Action = value;
				this.SendPropertyChanged("Action");
				this.OnActionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(MAX)")]
	public string PageName
	{
		get
		{
			return this._PageName;
		}
		set
		{
			if ((this._PageName != value))
			{
				this.OnPageNameChanging(value);
				this.SendPropertyChanging();
				this._PageName = value;
				this.SendPropertyChanged("PageName");
				this.OnPageNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(MAX)")]
	public string TableName
	{
		get
		{
			return this._TableName;
		}
		set
		{
			if ((this._TableName != value))
			{
				this.OnTableNameChanging(value);
				this.SendPropertyChanging();
				this._TableName = value;
				this.SendPropertyChanged("TableName");
				this.OnTableNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Memo", DbType="NVarChar(MAX)")]
	public string Memo
	{
		get
		{
			return this._Memo;
		}
		set
		{
			if ((this._Memo != value))
			{
				this.OnMemoChanging(value);
				this.SendPropertyChanging();
				this._Memo = value;
				this.SendPropertyChanged("Memo");
				this.OnMemoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemUserID", DbType="Int")]
	public System.Nullable<int> SystemUserID
	{
		get
		{
			return this._SystemUserID;
		}
		set
		{
			if ((this._SystemUserID != value))
			{
				this.OnSystemUserIDChanging(value);
				this.SendPropertyChanging();
				this._SystemUserID = value;
				this.SendPropertyChanged("SystemUserID");
				this.OnSystemUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreateDate
	{
		get
		{
			return this._CreateDate;
		}
		set
		{
			if ((this._CreateDate != value))
			{
				this.OnCreateDateChanging(value);
				this.SendPropertyChanging();
				this._CreateDate = value;
				this.SendPropertyChanged("CreateDate");
				this.OnCreateDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemPosition")]
public partial class SystemPosition : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private bool _Del;
	
	private EntitySet<SystemUser> _SystemUser;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDelChanging(bool value);
    partial void OnDelChanged();
    #endregion
	
	public SystemPosition()
	{
		this._SystemUser = new EntitySet<SystemUser>(new Action<SystemUser>(this.attach_SystemUser), new Action<SystemUser>(this.detach_SystemUser));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Del", DbType="Bit NOT NULL")]
	public bool Del
	{
		get
		{
			return this._Del;
		}
		set
		{
			if ((this._Del != value))
			{
				this.OnDelChanging(value);
				this.SendPropertyChanging();
				this._Del = value;
				this.SendPropertyChanged("Del");
				this.OnDelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemPosition_SystemUser", Storage="_SystemUser", ThisKey="ID", OtherKey="PositionID")]
	public EntitySet<SystemUser> SystemUser
	{
		get
		{
			return this._SystemUser;
		}
		set
		{
			this._SystemUser.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SystemUser(SystemUser entity)
	{
		this.SendPropertyChanging();
		entity.SystemPosition = this;
	}
	
	private void detach_SystemUser(SystemUser entity)
	{
		this.SendPropertyChanging();
		entity.SystemPosition = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemUser")]
public partial class SystemUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _PositionID;
	
	private string _Account;
	
	private string _Password;
	
	private string _Name;
	
	private string _Description;
	
	private System.DateTime _CreateTime;
	
	private string _Email;
	
	private string _Phone;
	
	private bool _LoginApp;
	
	private bool _Enable;
	
	private bool _Del;
	
	private EntitySet<SystemUser_Role> _SystemUser_Role;
	
	private EntityRef<SystemPosition> _SystemPosition;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPositionIDChanging(int value);
    partial void OnPositionIDChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnLoginAppChanging(bool value);
    partial void OnLoginAppChanged();
    partial void OnEnableChanging(bool value);
    partial void OnEnableChanged();
    partial void OnDelChanging(bool value);
    partial void OnDelChanged();
    #endregion
	
	public SystemUser()
	{
		this._SystemUser_Role = new EntitySet<SystemUser_Role>(new Action<SystemUser_Role>(this.attach_SystemUser_Role), new Action<SystemUser_Role>(this.detach_SystemUser_Role));
		this._SystemPosition = default(EntityRef<SystemPosition>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionID", DbType="Int NOT NULL")]
	public int PositionID
	{
		get
		{
			return this._PositionID;
		}
		set
		{
			if ((this._PositionID != value))
			{
				if (this._SystemPosition.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPositionIDChanging(value);
				this.SendPropertyChanging();
				this._PositionID = value;
				this.SendPropertyChanged("PositionID");
				this.OnPositionIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(225) NOT NULL", CanBeNull=false)]
	public string Account
	{
		get
		{
			return this._Account;
		}
		set
		{
			if ((this._Account != value))
			{
				this.OnAccountChanging(value);
				this.SendPropertyChanging();
				this._Account = value;
				this.SendPropertyChanged("Account");
				this.OnAccountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(225) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(225) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
	public System.DateTime CreateTime
	{
		get
		{
			return this._CreateTime;
		}
		set
		{
			if ((this._CreateTime != value))
			{
				this.OnCreateTimeChanging(value);
				this.SendPropertyChanging();
				this._CreateTime = value;
				this.SendPropertyChanged("CreateTime");
				this.OnCreateTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginApp", DbType="Bit NOT NULL")]
	public bool LoginApp
	{
		get
		{
			return this._LoginApp;
		}
		set
		{
			if ((this._LoginApp != value))
			{
				this.OnLoginAppChanging(value);
				this.SendPropertyChanging();
				this._LoginApp = value;
				this.SendPropertyChanged("LoginApp");
				this.OnLoginAppChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enable", DbType="Bit NOT NULL")]
	public bool Enable
	{
		get
		{
			return this._Enable;
		}
		set
		{
			if ((this._Enable != value))
			{
				this.OnEnableChanging(value);
				this.SendPropertyChanging();
				this._Enable = value;
				this.SendPropertyChanged("Enable");
				this.OnEnableChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Del", DbType="Bit NOT NULL")]
	public bool Del
	{
		get
		{
			return this._Del;
		}
		set
		{
			if ((this._Del != value))
			{
				this.OnDelChanging(value);
				this.SendPropertyChanging();
				this._Del = value;
				this.SendPropertyChanged("Del");
				this.OnDelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemUser_SystemUser_Role", Storage="_SystemUser_Role", ThisKey="ID", OtherKey="SystemUserID")]
	public EntitySet<SystemUser_Role> SystemUser_Role
	{
		get
		{
			return this._SystemUser_Role;
		}
		set
		{
			this._SystemUser_Role.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SystemPosition_SystemUser", Storage="_SystemPosition", ThisKey="PositionID", OtherKey="ID", IsForeignKey=true)]
	public SystemPosition SystemPosition
	{
		get
		{
			return this._SystemPosition.Entity;
		}
		set
		{
			SystemPosition previousValue = this._SystemPosition.Entity;
			if (((previousValue != value) 
						|| (this._SystemPosition.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._SystemPosition.Entity = null;
					previousValue.SystemUser.Remove(this);
				}
				this._SystemPosition.Entity = value;
				if ((value != null))
				{
					value.SystemUser.Add(this);
					this._PositionID = value.ID;
				}
				else
				{
					this._PositionID = default(int);
				}
				this.SendPropertyChanged("SystemPosition");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_SystemUser_Role(SystemUser_Role entity)
	{
		this.SendPropertyChanging();
		entity.SystemUser = this;
	}
	
	private void detach_SystemUser_Role(SystemUser_Role entity)
	{
		this.SendPropertyChanging();
		entity.SystemUser = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _No;
	
	private System.Nullable<int> _CustomerID;
	
	private string _Description;
	
	private System.Nullable<int> _Num;
	
	private System.Nullable<System.DateTime> _CDate;
	
	private System.Nullable<System.DateTime> _UDate;
	
	private System.Nullable<System.DateTime> _IDate;
	
	private bool _Del;
	
	private EntitySet<Invoice_Item> _Invoice_Item;
	
	private EntityRef<Customer> _Customer;
	
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNoChanging(string value);
    partial void OnNoChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNumChanging(System.Nullable<int> value);
    partial void OnNumChanged();
    partial void OnCDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCDateChanged();
    partial void OnUDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUDateChanged();
    partial void OnIDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIDateChanged();
    partial void OnDelChanging(bool value);
    partial void OnDelChanged();
    #endregion
	
	public Invoice()
	{
		this._Invoice_Item = new EntitySet<Invoice_Item>(new Action<Invoice_Item>(this.attach_Invoice_Item), new Action<Invoice_Item>(this.detach_Invoice_Item));
		this._Customer = default(EntityRef<Customer>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="NVarChar(255)")]
	public string No
	{
		get
		{
			return this._No;
		}
		set
		{
			if ((this._No != value))
			{
				this.OnNoChanging(value);
				this.SendPropertyChanging();
				this._No = value;
				this.SendPropertyChanged("No");
				this.OnNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
	public System.Nullable<int> CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				if (this._Customer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCustomerIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerID = value;
				this.SendPropertyChanged("CustomerID");
				this.OnCustomerIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num", DbType="Int")]
	public System.Nullable<int> Num
	{
		get
		{
			return this._Num;
		}
		set
		{
			if ((this._Num != value))
			{
				this.OnNumChanging(value);
				this.SendPropertyChanging();
				this._Num = value;
				this.SendPropertyChanged("Num");
				this.OnNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CDate
	{
		get
		{
			return this._CDate;
		}
		set
		{
			if ((this._CDate != value))
			{
				this.OnCDateChanging(value);
				this.SendPropertyChanging();
				this._CDate = value;
				this.SendPropertyChanged("CDate");
				this.OnCDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> UDate
	{
		get
		{
			return this._UDate;
		}
		set
		{
			if ((this._UDate != value))
			{
				this.OnUDateChanging(value);
				this.SendPropertyChanging();
				this._UDate = value;
				this.SendPropertyChanged("UDate");
				this.OnUDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> IDate
	{
		get
		{
			return this._IDate;
		}
		set
		{
			if ((this._IDate != value))
			{
				this.OnIDateChanging(value);
				this.SendPropertyChanging();
				this._IDate = value;
				this.SendPropertyChanged("IDate");
				this.OnIDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Del", DbType="Bit NOT NULL")]
	public bool Del
	{
		get
		{
			return this._Del;
		}
		set
		{
			if ((this._Del != value))
			{
				this.OnDelChanging(value);
				this.SendPropertyChanging();
				this._Del = value;
				this.SendPropertyChanged("Del");
				this.OnDelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Invoice_Item", Storage="_Invoice_Item", ThisKey="ID", OtherKey="InvoiceID")]
	public EntitySet<Invoice_Item> Invoice_Item
	{
		get
		{
			return this._Invoice_Item;
		}
		set
		{
			this._Invoice_Item.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Invoice", Storage="_Customer", ThisKey="CustomerID", OtherKey="ID", IsForeignKey=true)]
	public Customer Customer
	{
		get
		{
			return this._Customer.Entity;
		}
		set
		{
			Customer previousValue = this._Customer.Entity;
			if (((previousValue != value) 
						|| (this._Customer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Customer.Entity = null;
					previousValue.Invoice.Remove(this);
				}
				this._Customer.Entity = value;
				if ((value != null))
				{
					value.Invoice.Add(this);
					this._CustomerID = value.ID;
				}
				else
				{
					this._CustomerID = default(Nullable<int>);
				}
				this.SendPropertyChanged("Customer");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Invoice_Item(Invoice_Item entity)
	{
		this.SendPropertyChanging();
		entity.Invoice = this;
	}
	
	private void detach_Invoice_Item(Invoice_Item entity)
	{
		this.SendPropertyChanging();
		entity.Invoice = null;
	}
}
#pragma warning restore 1591
